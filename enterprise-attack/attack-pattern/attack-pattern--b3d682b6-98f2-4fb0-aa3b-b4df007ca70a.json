{
    "type": "bundle",
    "id": "bundle--1f4764c2-046e-402b-8f24-ac959aa1cf8f",
    "spec_version": "2.0",
    "objects": [
        {
            "type": "attack-pattern",
            "id": "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-05-31T21:30:32.662Z",
            "modified": "2018-01-17T12:56:55.080Z",
            "name": "Obfuscated Files or Information",
            "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system. This is common behavior that can be used across different platforms to evade defenses. Portions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis)\n\nDetection: Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).\n\nPlatforms: Linux, macOS, Windows\n\nData Sources: Network protocol analysis, Process use of network, Binary file metadata, File monitoring, Malware reverse engineering\n\nDefense Bypassed: Host forensic analysis, Signature-based detection, Host intrusion prevention systems",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }
            ],
            "external_references": [
                {
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/wiki/Technique/T1027",
                    "external_id": "T1027"
                },
                {
                    "source_name": "Linux/Cdorked.A We Live Security Analysis",
                    "description": "Pierre-Marc Bureau. (2013, April 26). Linux/Cdorked.A: New Apache backdoor being used in the wild to serve Blackhole. Retrieved September 10, 2017.",
                    "url": "https://www.welivesecurity.com/2013/04/26/linuxcdorked-new-apache-backdoor-in-the-wild-serves-blackhole/"
                }
            ],
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_data_sources": [
                "Network protocol analysis",
                "Process use of network",
                "Binary file metadata",
                "File monitoring",
                "Malware reverse engineering"
            ],
            "x_mitre_defense_bypassed": [
                "Host forensic analysis",
                "Signature-based detection",
                "Host intrusion prevention systems"
            ],
            "x_mitre_platforms": [
                "Linux",
                "macOS",
                "Windows"
            ]
        }
    ]
}